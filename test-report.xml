<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="C:\Users\Marck\Desktop\desafio-s11-marckoAj\__tests__\example.test.js">
    <testCase name="Home URL Base" duration="1249"/>
  </file>
  <file path="C:\Users\Marck\Desktop\desafio-s11-marckoAj\las-api-dev\__tests__\tiposVendasMock - test.js">
    <testCase name="testa GET /tipos-vendas Deve retornar lista com tipos-vendas" duration="52"/>
    <testCase name="testa GET /tipos-vendas Deve retornar tipo-venda pelo ID" duration="8"/>
    <testCase name="testa GET /tipos-vendas Não deve retornar tipo-venda por um ID inexistente" duration="16"/>
    <testCase name="Testa POST /tipos-venda Cria tipo-venda válido com sucesso" duration="25"/>
    <testCase name="Testa POST /tipos-venda Nao deve criar tipo-venda com dados Inválidos" duration="8"/>
    <testCase name="testa /PUT tipos-venda Deve alterar tipo-venda pelo ID Existente " duration="5"/>
    <testCase name="testa /PUT tipos-venda Não deve alterar tipo-venda pelo ID Inexistente " duration="5"/>
    <testCase name="testa /DELETE tipos-venda Deve deletar tipos-venda pelo ID Existente " duration="3"/>
    <testCase name="testa /DELETE tipos-venda Não deve deletar tipos-venda pelo ID Inexistente " duration="4"/>
  </file>
  <file path="C:\Users\Marck\Desktop\desafio-s11-marckoAj\las-api-dev\__tests__\usuarios - test.js">
    <testCase name="testa GET /usuarios Deve Listar usuarios" duration="37"/>
    <testCase name="testa GET /usuarios Deve buscar usuario pelo NOME" duration="9"/>
    <testCase name="testa GET /usuarios Não deve achar usuario com NOME não cadastrado" duration="6"/>
    <testCase name="testa GET /usuarios Deve buscar usuario pelo ID" duration="5"/>
    <testCase name="testa GET /usuarios Não deve achar usuario com ID inexistente " duration="4"/>
    <testCase name="testa GET /usuarios Deve buscar endereco pelo ID" duration="8"/>
    <testCase name="testa GET /usuarios Não deve achar endereco pelo ID inexistente" duration="18"/>
    <testCase name="testa GET /usuarios Deve buscar contatos pelo ID" duration="5"/>
    <testCase name="testa GET /usuarios Não deve achar contatos pelo ID inexistente" duration="4"/>
    <testCase name="testa GET /usuarios Deve buscar dados-pessoais pelo ID" duration="4"/>
    <testCase name="testa GET /usuarios Não deve achar dados-pessoais pelo ID inexistente" duration="4"/>
    <testCase name="Testa POST /usuarios Cria usuarios com dados válidos com sucesso" duration="153"/>
    <testCase name="Testa POST /usuarios Nao cria novo usuario com dados inválidos " duration="27"/>
    <testCase name="testa PUT /usuarios deve alterar dados pelo ID" duration="3"/>
    <testCase name="testa PUT /usuarios Não deve alterar dados pelo ID inválido" duration="3"/>
    <testCase name="testa PUT /usuarios Não deve alterar dados com ID invalido" duration="3"/>
    <testCase name="testa PUT /usuarios deve alterar contatos pelo ID" duration="4"/>
    <testCase name="testa PUT /usuarios Não deve alterar contatos com ID invalido" duration="3"/>
    <testCase name="testa PUT /usuarios deve alterar senha pelo ID" duration="3"/>
    <testCase name="testa PUT /usuarios Não deve alterar senha com ID invalido" duration="4"/>
    <testCase name="testa PUT /usuarios deve alterar endereco pelo ID" duration="4"/>
    <testCase name="testa PUT /usuarios Não deve alterar endereco com ID invalido" duration="5"/>
    <testCase name="testa PUT /usuarios Deve alterar dados-pessoais pelo ID" duration="5"/>
    <testCase name="testa PUT /usuarios Não deve alterar dados-pessoais com ID invalido" duration="3"/>
    <testCase name="testa DELETE /usuarios deve excluir usuario pelo ID" duration="3"/>
    <testCase name="testa DELETE /usuarios Não deve excluir usuario pelo ID inexistente" duration="4"/>
  </file>
  <file path="C:\Users\Marck\Desktop\desafio-s11-marckoAj\las-api-dev\__tests__\eventos - test.js">
    <testCase name="testa GET /eventos Página Inicial" duration="34"/>
    <testCase name="testa GET /eventos Deve retornar lista com eventos" duration="14"/>
    <testCase name="testa GET /eventos Deve retornar evento pelo ID" duration="8"/>
    <testCase name="testa GET /eventos Não deve retornar evento por um ID inexistente" duration="26"/>
    <testCase name="testa GET /eventos Deve retornar evento pelo Status agendado " duration="7"/>
    <testCase name="testa GET /eventos Deve retornar evento pelo Status em-andamento " duration="4"/>
    <testCase name="testa GET /eventos Deve retornar evento pelo Status agendado " duration="5"/>
    <testCase name="testa GET /eventos Não deve retornar evento com Status invalido " duration="5"/>
    <testCase name="Testa POST /eventos Cria evento válido com sucesso" duration="224"/>
    <testCase name="Testa POST /eventos Nao cria evento com data inicio &gt; data fim" duration="5"/>
    <testCase name="testa /PUT eventos Deve alterar evento pelo ID valido " duration="3"/>
    <testCase name="testa /DELETE eventos Deve alterar evento pelo ID valido " duration="3"/>
  </file>
</testExecutions>